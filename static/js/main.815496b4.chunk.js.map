{"version":3,"sources":["theme/global.ts","theme/fonts.ts","theme/colors.ts","theme/index.ts","api/socket.ts","TickersContext.tsx","ColorModeSwitcher.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","components/TableComponent/TableComponent.tsx","components/ModalUnwatched/ModalUnwatched.tsx","App.tsx","index.tsx"],"names":["global","body","margin","padding","fontSize","fonts","heading","colors","brand","theme","extendTheme","styles","socket","io","on","console","log","TickersContext","createContext","useTickersContext","useContext","TickersContextProvider","children","useState","response","setResponse","unselected","setUnselected","useEffect","interval","setInterval","emit","data","clearInterval","Provider","value","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","variant","color","marginLeft","border","onClick","icon","Header","bg","w","justify","bgColor","py","flexShrink","borderColor","borderBottomRadius","colorScheme","justifySelf","Footer","h","borderTopRadius","direction","align","TableComponent","tableItems","useMemo","filter","el","includes","ticker","borderRadius","position","length","map","element","index","textAlign","fontWeight","exchange","price","change","parseFloat","change_percent","gridGap","borderBottom","mt","width","display","justifyContent","thickness","speed","emptyColor","ModalUnwatched","useDisclosure","isOpen","onOpen","onClose","disabled","spacing","splice","App","minH","flexGrow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.815496b4.chunk.js","sourcesContent":["const global: object = {\n  body: {\n    margin: 0,\n    padding: 0,\n    fontSize: '16px',\n  }\n};\n\nexport default global;\n","const fonts: object = {\n  body: 'Roboto, sans-serif',\n  heading: 'Roboto, sans-serif',\n};\n\nexport default fonts;\n","const colors: object = {\n  brand: {\n    100: '#000',\n    900: '#808080',\n  }\n}\n\nexport default colors;\n","import global from './global';\nimport fonts from './fonts';\nimport colors from './colors';\nimport { extendTheme } from '@chakra-ui/react';\n\nconst theme: Object = extendTheme({\n  styles: {\n    global,\n  },\n  fonts,\n  colors,\n})\n\nexport default theme;\n","import { io } from 'socket.io-client';\n\nconst ENDPOINT = \"http://localhost:4000/\";\n\nexport const socket = io(ENDPOINT);\n\nsocket.on(\"connect\", () => {\n  console.log(\"Successfully connected\");\n})\n\nsocket.on(\"connect_error\", () => {\n  console.log(\"Connection error\");\n})\n\nsocket.on(\"disconnect\", () => {\n  console.log(\"Disconnected\");\n})\n","import React,\r\n{\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport { ResponseExample } from './types/ResponseExample';\r\nimport { socket } from './api/socket';\r\n\r\ninterface TickersContextState {\r\n  response: ResponseExample[],\r\n  setResponse: (value: ResponseExample[]) => void,\r\n  unselected: string[],\r\n  setUnselected: (value: string[]) => void,\r\n};\r\n\r\nexport const TickersContext = createContext<TickersContextState>({} as TickersContextState);\r\n\r\nconst useTickersContext = () => useContext(TickersContext);\r\n\r\nconst TickersContextProvider: React.FC = ({ children }) => {\r\n  const [response, setResponse] = useState<ResponseExample[]>([]);\r\n  const [unselected, setUnselected] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      socket.emit(\"start\");\r\n      socket.on(\"ticker\", (data: ResponseExample[]) => {\r\n        setResponse(data);\r\n      });\r\n    }, 2000)\r\n    return () => clearInterval(interval);\r\n  }, [response]);\r\n\r\n  return (\r\n    <TickersContext.Provider value={{response, setResponse, unselected, setUnselected}}>\r\n      {children}\r\n    </TickersContext.Provider>\r\n  );\r\n};\r\n\r\nexport {TickersContextProvider, useTickersContext};\r\n","import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  IconButtonProps,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype ColorModeSwitcherProps = Omit<IconButtonProps, \"aria-label\">\n\nexport const ColorModeSwitcher: React.FC<ColorModeSwitcherProps> = (props) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      border=\"2px solid grey\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n","import React from 'react';\nimport {\n  Flex,\n  Heading,\n  useColorModeValue\n} from '@chakra-ui/react';\nimport { ColorModeSwitcher } from '../../ColorModeSwitcher';\n\nconst Header = () => {\n  const bg = useColorModeValue(\"#d3d3d3\", \"#292968\");\n\n  return (\n    <Flex\n      w=\"100%\"\n      justify=\"center\"\n      bgColor={bg}\n      py=\"10px\"\n      flexShrink={0}\n      border=\"1px solid\"\n      borderColor=\"grey\"\n      borderBottomRadius=\"10px\"\n    >\n      <Flex\n        w=\"70%\"\n        justify=\"space-between\"\n        py=\"30px\"\n      >\n        <Heading colorScheme=\"brand.100\">\n          Finance app\n        </Heading>\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\n      </Flex>\n    </Flex>\n  );\n};\n\n\n\nexport default Header;\n","import React from 'react';\nimport {\n  Flex,\n  Heading,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react';\n\nconst Footer = () => {\n  const bg = useColorModeValue(\"#d3d3d3\", \"#292968\");\n\n  return (\n    <Flex\n      w=\"100%\"\n      justify=\"center\"\n      bgColor={bg}\n      h=\"120px\"\n      flexShrink={0}\n      border=\"1px solid\"\n      borderColor=\"grey\"\n      borderTopRadius=\"10px\"\n    >\n      <Flex\n        w=\"70%\"\n        direction=\"column\"\n        align=\"center\"\n        py=\"30px\"\n      >\n        <Heading colorScheme=\"brand.100\">\n          Finance app\n        </Heading>\n        <Text colorScheme=\"brand.100\">\n          Copyright ©\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Footer;\n","import React, { useMemo } from 'react';\nimport { useTickersContext } from '../../TickersContext';\nimport { ResponseExample } from '../../types/ResponseExample';\nimport {\n  Box,\n  Flex,\n  Button,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\nimport { Spinner } from '@chakra-ui/react';\n\nconst TableComponent = () => {\n  const { response, unselected, setUnselected } = useTickersContext();\n  const bg = useColorModeValue(\"#fff\", \"#333546\");\n\n  const tableItems = useMemo(() => {\n    return response.filter((el: ResponseExample) => !unselected.includes(el.ticker));\n  }, [response, unselected]);\n\n  return (\n    <Box\n      border=\"1px solid grey\"\n      borderRadius=\"10px\"\n    >\n      <Table\n        variant=\"simple\"\n        size=\"lg\"\n        bgColor={bg}\n        borderRadius=\"10px\"\n        position=\"relative\"\n      >\n        <Thead>\n          <Tr>\n            <Th>Name</Th>\n            <Th>Exchange</Th>\n            <Th>Current price</Th>\n            <Th>Change ($)</Th>\n            <Th>Change (%)</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {tableItems.length > 0\n            ?\n            (tableItems.map((element: ResponseExample, index: number) => (\n              <Tr key={index} textAlign=\"center\">\n                <Td py=\"10px\" fontWeight=\"bold\">{element.ticker}</Td>\n                <Td py=\"10px\" fontWeight=\"bold\">{element.exchange}</Td>\n                <Td py=\"10px\" textAlign=\"center\" fontWeight=\"bold\">\n                  {element.price + ' $'}\n                </Td>\n                <Td py=\"10px\" textAlign=\"center\" fontWeight=\"bold\">\n                  {element.change}\n                </Td>\n                <Td py=\"10px\">\n                  {parseFloat(element.change_percent) > 0\n                    ? (\n                      <Flex\n                        w=\"80px\"\n                        bgColor=\"#84f4a4\"\n                        justify=\"center\"\n                        align=\"center\"\n                        py=\"3px\"\n                        gridGap=\"5px\"\n                        borderRadius=\"5px\"\n                        color=\"#397a59\"\n                        fontWeight=\"bold\"\n                      >\n                        <FaArrowUp color=\"green\"/>\n                        {element.change_percent + '%'}\n                      </Flex>\n                    )\n                    :\n                    (\n                      <Flex\n                        w=\"80px\"\n                        bgColor=\"#f29087\"\n                        justify=\"center\"\n                        align=\"center\"\n                        py=\"3px\"\n                        gridGap=\"5px\"\n                        borderRadius=\"5px\"\n                        color=\"#872d25\"\n                        fontWeight=\"bold\"\n                      >\n                        <FaArrowDown color=\"red\"/>\n                        {element.change_percent + '%'}\n                      </Flex>\n                    )\n                  }\n                </Td>\n                <Td borderBottom=\"none\" py=\"10px\">\n                  <Button\n                    onClick={() => {\n                      setUnselected([...unselected, element.ticker]);\n                    }}\n                  >\n                    x\n                  </Button>\n                </Td>\n              </Tr>)))\n            :\n            (\n              <Box\n                mt=\"60px\"\n                position=\"absolute\"\n                width=\"100%\"\n                display=\"flex\"\n                justifyContent=\"center\"\n              >\n                <Spinner\n                  thickness=\"4px\"\n                  speed=\"0.65s\"\n                  emptyColor=\"gray.200\"\n                  color=\"blue.500\"\n                  size=\"xl\"\n                />\n              </Box>\n            )\n          }\n        </Tbody>\n      </Table>\n    </Box>\n  );\n};\n\nexport default TableComponent;\n","import React from 'react';\r\nimport { useTickersContext } from '../../TickersContext';\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  Flex,\r\n  List,\r\n  ListItem,\r\n  Text,\r\n} from '@chakra-ui/react';\r\n\r\nconst ModalUnwatched = () => {\r\n  const { unselected } = useTickersContext();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={onOpen} disabled={!unselected.length}>\r\n        View removed\r\n      </Button>\r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Removed from the watchlist</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            {unselected.length > 0\r\n              ? (\r\n                <List spacing=\"10px\">\r\n                  {unselected.map((ticker, index: number) => (\r\n                    <ListItem key={index}>\r\n                      <Flex justify=\"space-between\">\r\n                        {ticker}\r\n                        <Button onClick={() => [...unselected.splice(index, 1)]}>\r\n                          +\r\n                        </Button>\r\n                      </Flex>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              )\r\n              : (\r\n                <Text>No unwatched tickers</Text>\r\n              )\r\n            }\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              onClick={onClose}\r\n            >\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalUnwatched;\r\n","import * as React from 'react'\nimport theme from './theme';\nimport { TickersContextProvider } from './TickersContext';\nimport { ChakraProvider, Flex } from '@chakra-ui/react';\n\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport TableComponent from './components/TableComponent/TableComponent';\nimport ModalUnwatched from './components/ModalUnwatched/ModalUnwatched';\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    <TickersContextProvider>\n      <Flex minH=\"100vh\" direction=\"column\">\n        <Header />\n        <Flex\n          direction=\"column\"\n          flexGrow={1}\n          justify=\"center\"\n          align=\"center\"\n          py=\"50px\"\n          gridGap=\"10px\"\n        >\n          <ModalUnwatched />\n          <TableComponent />\n        </Flex>\n        <Footer />\n      </Flex>\n    </TickersContextProvider>\n  </ChakraProvider>\n);\n","import { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ColorModeScript />\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n"],"sourceRoot":""}